
name: Release to OSSRH
on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Release branch and/or tag"
        default: "master"
        required: true

jobs:
  test:
    name: "Test and release to Sonatype"
    runs-on: ubuntu-latest
    env:
      GRADLE_OPTS: "-Xmx8198m -XX:MaxPermSize=4096m -XX:+HeapDumpOnOutOfMemoryError"
      GRADLE_FLAGS: "--no-daemon -i"
      SIGNING_KEY_ID: "${{ secrets.SIGNING_KEY_ID }}"
      SIGNING_KEY: "${{ secrets.SIGNING_KEY }}"
      SIGNING_KEY_PASSWORD: "${{ secrets.SIGNING_PASSWORD }}"
      SONATYPE_USERNAME: "${{ secrets.SONATYPE_USER }}"
      SONATYPE_PASSWORD: "${{ secrets.SONATYPE_PASSWORD }}"
      GITHUB_TOKEN: "${{ secrets.ACCESS_TOKEN }}"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}
          fetch-depth: 0

      - name: Set up Java 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Tests
        run: ./gradlew clean test ${GRADLE_FLAGS}

      - name: Release artefacts
        run: ./gradlew release ${GRADLE_FLAGS}
        if: github.event.inputs.branch == "master"

      - name: Publish to Sonatype
        run: ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository ${GRADLE_FLAGS}

      - name: Publish to Github Packages
        run: ./gradlew publishAllPublicationsToGithubRepository ${GRADLE_FLAGS}
